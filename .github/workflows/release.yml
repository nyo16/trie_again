name: Build precompiled NIFs

permissions:
  id-token: write
  attestations: write
  contents: write

on:
  push:
    branches:
      - main
      - master
    paths:
      # Just run on main branch if "native" path changed.
      - "native/**"
      # Also run if this file changes.
      - ".github/workflows/release.yml"
    tags:
      # Tags will always run.
      - "*"
  pull_request:
    paths:
      # In PRs we only run if this file changes.
      - ".github/workflows/release.yml"
  workflow_dispatch:

jobs:
  build_release:
    name: NIF ${{ matrix.nif }} - ${{ matrix.job.target }} (${{ matrix.job.os }})
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        nif: ["2.15"]
        job:
          - { target: aarch64-unknown-linux-gnu   , os: ubuntu-22.04 , use-cross: true }
          - { target: aarch64-apple-darwin        , os: macos-13      }
          - { target: x86_64-apple-darwin         , os: macos-13      }
          - { target: x86_64-unknown-linux-gnu    , os: ubuntu-22.04  }
          - { target: x86_64-unknown-linux-musl   , os: ubuntu-22.04 , use-cross: true }
          - { target: x86_64-pc-windows-msvc      , os: windows-2022  }

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Extract project version
      shell: bash
      run: |
        # Get the version from mix.exs
        VERSION=$(grep '@version' mix.exs | head -n 1 | sed 's/.*@version "\(.*\)".*/\1/')
        echo "PROJECT_VERSION=$VERSION" >> $GITHUB_ENV

    - name: Install Elixir and Erlang
      uses: erlef/setup-beam@v1
      with:
        version-type: strict
        otp-version: 26.2
        elixir-version: 1.18.4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        target: ${{ matrix.job.target }}

    - name: Install dependencies
      run: mix deps.get

    - name: Build the project
      id: build-crate
      uses: philss/rustler-precompiled-action@v1.1.4
      with:
        project-name: trie_hard_native
        project-version: ${{ env.PROJECT_VERSION }}
        target: ${{ matrix.job.target }}
        nif-version: ${{ matrix.nif }}
        use-cross: ${{ matrix.job.use-cross }}
        project-dir: "native/trie_hard_native"

    - name: Artifact upload
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.build-crate.outputs.file-name }}
        path: ${{ steps.build-crate.outputs.file-path }}

    - name: Publish archives and packages
      uses: softprops/action-gh-release@v2
      with:
        files: |
          ${{ steps.build-crate.outputs.file-path }}
      if: startsWith(github.ref, 'refs/tags/')